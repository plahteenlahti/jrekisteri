require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe MembershipsController, type: :controller do

  # This should return the minimal set of attributes required to create a valid
  # Membership. As you add validations to Membership, be sure to
  # adjust the attributes here as well.
  let!(:organization){ FactoryGirl.create(:organization) }
  let!(:user){ FactoryGirl.create(:user) }
  let!(:membership){FactoryGirl.create(:membership)}


  before(:each) {
    session[:user_id] = user.id
  }

  describe "GET #show" do
    it "assigns the requested membership as @membership" do
      get :show, id: membership
      expect(assigns(:membership)).to eq(membership)
    end
  end

  describe "POST #create" do

    describe "with valid params" do
      it "creates a new Membership" do
        membership_params = {"organization_id"=>"1", "user_id"=>"1"}
        expect{
          put :create, membership:membership_params
        }.to change(Membership, :count).by(1)
      end

      it "redirects to the created membership" do
        membership_params = {"organization_id"=>"1", "user_id"=>"1"}
        put :create, membership:membership_params
        expect(response).to redirect_to(Organization.first)
      end
    end
  end
end